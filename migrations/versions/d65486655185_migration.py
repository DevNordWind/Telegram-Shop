"""migration

Revision ID: d65486655185
Revises: 
Create Date: 2025-04-06 06:57:16.734925

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd65486655185'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category'))
    )
    op.create_table('user',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('currency', sa.String(length=4), nullable=False),
    sa.Column('lang', sa.String(length=4), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('reg_time', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('user_id', name=op.f('uq_user_user_id'))
    )
    op.create_table('categorylocalized',
    sa.Column('category_id_fk', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('lang', sa.String(length=4), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['category_id_fk'], ['category.id'], name=op.f('fk_categorylocalized_category_id_fk_category'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categorylocalized'))
    )
    op.create_table('position',
    sa.Column('category_id_fk', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('file_id', sa.String(), nullable=True),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['category_id_fk'], ['category.id'], name=op.f('fk_position_category_id_fk_category'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_position'))
    )
    op.create_table('purchase',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id_fk', sa.Integer(), nullable=False),
    sa.Column('balance_before', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('balance_after', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=4), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id_fk'], ['user.id'], name=op.f('fk_purchase_user_id_fk_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase'))
    )
    op.create_table('wallet',
    sa.Column('user_id_fk', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=4), nullable=False),
    sa.Column('balance', sa.DECIMAL(precision=16, scale=2), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id_fk'], ['user.id'], name=op.f('fk_wallet_user_id_fk_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_wallet'))
    )
    op.create_table('item',
    sa.Column('category_id_fk', sa.Integer(), nullable=True),
    sa.Column('position_id_fk', sa.Integer(), nullable=True),
    sa.Column('purchase_id_fk', sa.UUID(), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['category_id_fk'], ['category.id'], name=op.f('fk_item_category_id_fk_category'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['position_id_fk'], ['position.id'], name=op.f('fk_item_position_id_fk_position'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['purchase_id_fk'], ['purchase.id'], name=op.f('fk_item_purchase_id_fk_purchase'), ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_item'))
    )
    op.create_table('positionlocalized',
    sa.Column('position_id_fk', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('lang', sa.String(length=4), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['position_id_fk'], ['position.id'], name=op.f('fk_positionlocalized_position_id_fk_position'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_positionlocalized'))
    )
    op.create_table('positionprice',
    sa.Column('position_id_fk', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=4), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['position_id_fk'], ['position.id'], name=op.f('fk_positionprice_position_id_fk_position'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_positionprice'))
    )
    op.create_table('refill',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id_fk', sa.Integer(), nullable=False),
    sa.Column('wallet_id_fk', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=16, scale=2), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('cause', sa.String(), nullable=False),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id_fk'], ['user.id'], name=op.f('fk_refill_user_id_fk_user')),
    sa.ForeignKeyConstraint(['wallet_id_fk'], ['wallet.id'], name=op.f('fk_refill_wallet_id_fk_wallet')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refill'))
    )
    op.create_table('withdraw',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id_fk', sa.Integer(), nullable=False),
    sa.Column('wallet_id_fk', sa.Integer(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=16, scale=2), nullable=False),
    sa.Column('cause', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id_fk'], ['user.id'], name=op.f('fk_withdraw_user_id_fk_user')),
    sa.ForeignKeyConstraint(['wallet_id_fk'], ['wallet.id'], name=op.f('fk_withdraw_wallet_id_fk_wallet')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_withdraw'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('withdraw')
    op.drop_table('refill')
    op.drop_table('positionprice')
    op.drop_table('positionlocalized')
    op.drop_table('item')
    op.drop_table('wallet')
    op.drop_table('purchase')
    op.drop_table('position')
    op.drop_table('categorylocalized')
    op.drop_table('user')
    op.drop_table('category')
    # ### end Alembic commands ###
